<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Africa Online Networks - Network Traffic Monitor</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary: #3b82f6;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --dark: #0f172a;
            --darker: #020617;
            --light: #e2e8f0;
            --gray: #64748b;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, var(--darker), var(--dark));
            color: var(--light);
            min-height: 100vh;
            padding: 20px;
        }
        
        .dashboard {
            max-width: 1400px;
            margin: 0 auto;
        }
        
        /* NEW: Africa Online Networks Main Header */
        .main-header {
            text-align: center;
            margin-bottom: 20px;
            padding: 30px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 16px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
        
        .main-header h1 {
            font-size: 42px;
            font-weight: 800;
            color: white;
            margin-bottom: 10px;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        }
        
        .main-header p {
            font-size: 18px;
            color: rgba(255, 255, 255, 0.9);
            font-weight: 300;
        }
        
        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding: 20px;
            background: rgba(30, 41, 59, 0.8);
            border-radius: 16px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .header h2 {
            font-size: 28px;
            font-weight: 700;
            background: linear-gradient(90deg, var(--primary), var(--success));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            display: flex;
            align-items: center;
            gap: 12px;
        }
        
        .live-indicator {
            display: flex;
            align-items: center;
            gap: 10px;
            background: rgba(16, 185, 129, 0.2);
            padding: 10px 20px;
            border-radius: 25px;
            border: 1px solid rgba(16, 185, 129, 0.3);
        }
        
        .pulse {
            width: 12px;
            height: 12px;
            background: var(--success);
            border-radius: 50%;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7); }
            70% { transform: scale(1); box-shadow: 0 0 0 10px rgba(16, 185, 129, 0); }
            100% { transform: scale(0.95); box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); }
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .card {
            background: rgba(30, 41, 59, 0.8);
            border-radius: 16px;
            padding: 25px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        }
        
        .card-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 20px;
        }
        
        .card h3 {
            font-size: 20px;
            color: var(--light);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .card h3 i {
            color: var(--primary);
        }
        
        .main-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
        
        .stat-box {
            background: rgba(15, 23, 42, 0.6);
            padding: 20px;
            border-radius: 12px;
            border-left: 4px solid var(--primary);
        }
        
        .stat-box.upload {
            border-left-color: var(--success);
        }
        
        .stat-box.download {
            border-left-color: var(--primary);
        }
        
        .stat-value {
            font-size: 28px;
            font-weight: 700;
            margin: 10px 0;
        }
        
        .stat-label {
            color: var(--gray);
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        .progress-container {
            margin: 15px 0;
        }
        
        .progress-label {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
            font-size: 14px;
        }
        
        .progress-bar {
            height: 8px;
            background: rgba(100, 116, 139, 0.3);
            border-radius: 4px;
            overflow: hidden;
        }
        
        .progress-fill {
            height: 100%;
            border-radius: 4px;
            transition: width 0.3s ease;
        }
        
        .upload-fill { background: var(--success); }
        .download-fill { background: var(--primary); }
        
        .clients-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-top: 20px;
        }
        
        .client-card {
            background: rgba(15, 23, 42, 0.6);
            padding: 15px;
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .client-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .client-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .client-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary), var(--success));
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: white;
        }
        
        .client-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-top: 10px;
        }
        
        .mini-stat {
            text-align: center;
            padding: 10px;
            background: rgba(30, 41, 59, 0.6);
            border-radius: 8px;
        }
        
        .mini-value {
            font-size: 16px;
            font-weight: 600;
            margin: 5px 0;
        }
        
        .mini-label {
            font-size: 12px;
            color: var(--gray);
        }
        
        .charts-container {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .chart-card {
            background: rgba(30, 41, 59, 0.8);
            border-radius: 16px;
            padding: 25px;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .chart-container {
            height: 300px;
            margin-top: 15px;
        }
        
        .usage-breakdown {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .usage-item {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 15px;
            background: rgba(15, 23, 42, 0.6);
            border-radius: 12px;
        }
        
        .usage-color {
            width: 20px;
            height: 20px;
            border-radius: 4px;
        }
        
        .usage-details {
            flex: 1;
        }
        
        .usage-name {
            font-size: 14px;
            color: var(--gray);
        }
        
        .usage-value {
            font-size: 16px;
            font-weight: 600;
        }
        
        .table-container {
            overflow-x: auto;
        }
        
        .clients-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }
        
        .clients-table th {
            text-align: left;
            padding: 15px;
            background: rgba(15, 23, 42, 0.8);
            font-weight: 600;
            color: var(--gray);
            text-transform: uppercase;
            font-size: 12px;
            letter-spacing: 1px;
        }
        
        .clients-table td {
            padding: 15px;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
        }
        
        .client-row:hover {
            background: rgba(30, 41, 59, 0.6);
        }
        
        .status-indicator {
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .status-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
        }
        
        .online { background: var(--success); }
        .offline { background: var(--gray); }
        
        .footer {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            background: rgba(30, 41, 59, 0.8);
            border-radius: 16px;
            color: var(--gray);
            font-size: 14px;
        }
        
        @media (max-width: 768px) {
            .charts-container,
            .clients-grid,
            .main-stats {
                grid-template-columns: 1fr;
            }
            
            .header {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }
            
            .main-header h1 {
                font-size: 32px;
            }
            
            .main-header p {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard">
        <!-- NEW: Africa Online Networks Main Header -->
        <div class="main-header">
            <h1>🌍 Africa Online Networks</h1>
            <p>Network Traffic Monitoring Dashboard</p>
        </div>
        
        <div class="header">
            <h2><i class="fas fa-network-wired"></i> Network Traffic Monitor</h2>
            <div class="live-indicator">
                <div class="pulse"></div>
                <span>LIVE DATA STREAMING</span>
            </div>
        </div>
        
        <div class="stats-grid">
            <div class="card">
                <div class="card-header">
                    <h3><i class="fas fa-globe"></i> Internet Overview</h3>
                </div>
                <div class="main-stats">
                    <div class="stat-box upload">
                        <div class="stat-label">Upload Speed</div>
                        <div class="stat-value" id="upload-speed">0 Mbps</div>
                        <div class="progress-container">
                            <div class="progress-label">
                                <span>Current: <span id="upload-current">0</span> Mbps</span>
                                <span>Peak: <span id="upload-peak">0</span> Mbps</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill upload-fill" id="upload-progress" style="width: 0%"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="stat-box download">
                        <div class="stat-label">Download Speed</div>
                        <div class="stat-value" id="download-speed">0 Mbps</div>
                        <div class="progress-container">
                            <div class="progress-label">
                                <span>Current: <span id="download-current">0</span> Mbps</span>
                                <span>Peak: <span id="download-peak">0</span> Mbps</span>
                            </div>
                            <div class="progress-bar">
                                <div class="progress-fill download-fill" id="download-progress" style="width: 0%"></div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="clients-grid" id="clients-overview">
                    <!-- Client overview cards will be populated here -->
                </div>
            </div>
            
            <div class="card">
                <div class="card-header">
                    <h3><i class="fas fa-chart-pie"></i> Usage Breakdown</h3>
                </div>
                <div class="usage-breakdown">
                    <div class="usage-item">
                        <div class="usage-color" style="background: #3b82f6;"></div>
                        <div class="usage-details">
                            <div class="usage-name">Streaming</div>
                            <div class="usage-value" id="usage-streaming">0 GB</div>
                        </div>
                    </div>
                    <div class="usage-item">
                        <div class="usage-color" style="background: #10b981;"></div>
                        <div class="usage-details">
                            <div class="usage-name">Gaming</div>
                            <div class="usage-value" id="usage-gaming">0 GB</div>
                        </div>
                    </div>
                    <div class="usage-item">
                        <div class="usage-color" style="background: #f59e0b;"></div>
                        <div class="usage-details">
                            <div class="usage-name">Downloads</div>
                            <div class="usage-value" id="usage-downloads">0 GB</div>
                        </div>
                    </div>
                    <div class="usage-item">
                        <div class="usage-color" style="background: #ef4444;"></div>
                        <div class="usage-details">
                            <div class="usage-name">Web Browsing</div>
                            <div class="usage-value" id="usage-web">0 GB</div>
                        </div>
                    </div>
                </div>
                
                <div class="chart-container">
                    <canvas id="usage-chart"></canvas>
                </div>
            </div>
        </div>
        
        <div class="charts-container">
            <div class="chart-card">
                <div class="card-header">
                    <h3><i class="fas fa-chart-line"></i> Real-Time Traffic</h3>
                </div>
                <div class="chart-container">
                    <canvas id="traffic-chart"></canvas>
                </div>
            </div>
            
            <div class="chart-card">
                <div class="card-header">
                    <h3><i class="fas fa-clock"></i> Peak Hours</h3>
                </div>
                <div class="chart-container">
                    <canvas id="peak-chart"></canvas>
                </div>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <h3><i class="fas fa-users"></i> Connected Clients</h3>
            </div>
            <div class="table-container">
                <table class="clients-table">
                    <thead>
                        <tr>
                            <th>Client</th>
                            <th>IP Address</th>
                            <th>Upload</th>
                            <th>Download</th>
                            <th>Total Usage</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody id="clients-table">
                        <!-- Client data will be populated here -->
                    </tbody>
                </table>
            </div>
        </div>
        
        <div class="footer">
            <p>© 2025 Africa Online Networks. All rights reserved.</p>
            <p>Last Updated: <span id="last-updated">--:--:--</span> | Auto-refresh every 2 seconds</p>
        </div>
    </div>

    <script>
        // Enhanced client data with more realistic information
        const clients = [
            { 
                id: 1, 
                name: "John's PC", 
                ip: "192.168.1.101", 
                upload: 0, 
                download: 0, 
                totalUsage: 245, 
                status: "online",
                type: "desktop",
                services: ["Streaming", "Gaming"]
            },
            { 
                id: 2, 
                name: "Sarah's Laptop", 
                ip: "192.168.1.102", 
                upload: 0, 
                download: 0, 
                totalUsage: 189, 
                status: "online",
                type: "laptop",
                services: ["Work", "Video Calls"]
            },
            { 
                id: 3, 
                name: "Mobile Device", 
                ip: "192.168.1.103", 
                upload: 0, 
                download: 0, 
                totalUsage: 142, 
                status: "online",
                type: "mobile",
                services: ["Social Media", "Web Browsing"]
            },
            { 
                id: 4, 
                name: "Media Server", 
                ip: "192.168.1.104", 
                upload: 0, 
                download: 0, 
                totalUsage: 315, 
                status: "online",
                type: "server",
                services: ["Streaming", "Backups"]
            },
            { 
                id: 5, 
                name: "IoT Device", 
                ip: "192.168.1.105", 
                upload: 0, 
                download: 0, 
                totalUsage: 98, 
                status: "offline",
                type: "iot",
                services: ["Smart Home"]
            }
        ];

        // Initialize charts
        const trafficCtx = document.getElementById('traffic-chart').getContext('2d');
        const trafficChart = new Chart(trafficCtx, {
            type: 'line',
            data: {
                labels: Array.from({length: 20}, (_, i) => i + 1 + 's'),
                datasets: [
                    {
                        label: 'Upload (Mbps)',
                        data: Array(20).fill(0),
                        borderColor: '#10b981',
                        backgroundColor: 'rgba(16, 185, 129, 0.1)',
                        tension: 0.4,
                        fill: true
                    },
                    {
                        label: 'Download (Mbps)',
                        data: Array(20).fill(0),
                        borderColor: '#3b82f6',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        tension: 0.4,
                        fill: true
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'top',
                        labels: {
                            color: '#e2e8f0'
                        }
                    }
                },
                scales: {
                    x: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        },
                        ticks: {
                            color: '#94a3b8'
                        }
                    },
                    y: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        },
                        ticks: {
                            color: '#94a3b8'
                        },
                        beginAtZero: true
                    }
                }
            }
        });

        const usageCtx = document.getElementById('usage-chart').getContext('2d');
        const usageChart = new Chart(usageCtx, {
            type: 'doughnut',
            data: {
                labels: ['Streaming', 'Gaming', 'Downloads', 'Web Browsing', 'Other'],
                datasets: [{
                    data: [35, 25, 20, 15, 5],
                    backgroundColor: [
                        '#3b82f6',
                        '#10b981',
                        '#f59e0b',
                        '#ef4444',
                        '#8b5cf6'
                    ],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            color: '#e2e8f0',
                            padding: 20
                        }
                    }
                }
            }
        });

        const peakCtx = document.getElementById('peak-chart').getContext('2d');
        const peakChart = new Chart(peakCtx, {
            type: 'bar',
            data: {
                labels: ['12AM', '3AM', '6AM', '9AM', '12PM', '3PM', '6PM', '9PM'],
                datasets: [{
                    label: 'Network Usage (%)',
                    data: [15, 10, 35, 45, 65, 75, 85, 70],
                    backgroundColor: 'rgba(59, 130, 246, 0.8)',
                    borderColor: '#3b82f6',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        labels: {
                            color: '#e2e8f0'
                        }
                    }
                },
                scales: {
                    x: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        },
                        ticks: {
                            color: '#94a3b8'
                        }
                    },
                    y: {
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        },
                        ticks: {
                            color: '#94a3b8'
                        },
                        beginAtZero: true,
                        max: 100
                    }
                }
            }
        });

        // Track peak values
        let peakUpload = 0;
        let peakDownload = 0;

        // Function to generate realistic network traffic
        function generateNetworkTraffic() {
            // Base values with realistic variations
            const baseUpload = 5 + Math.random() * 15;
            const baseDownload = 20 + Math.random() * 40;
            
            // Add occasional spikes
            const spike = Math.random() > 0.9 ? Math.random() * 50 : 0;
            
            return {
                upload: baseUpload + spike,
                download: baseDownload + spike
            };
        }

        // Function to update client overview cards
        function updateClientOverview() {
            const container = document.getElementById('clients-overview');
            container.innerHTML = '';
            
            clients.forEach(client => {
                if (client.status === 'online') {
                    const card = document.createElement('div');
                    card.className = 'client-card';
                    
                    card.innerHTML = `
                        <div class="client-header">
                            <div class="client-info">
                                <div class="client-avatar">${client.name.charAt(0)}</div>
                                <div>
                                    <div style="font-weight: 600;">${client.name}</div>
                                    <div style="font-size: 12px; color: #94a3b8;">${client.ip}</div>
                                </div>
                            </div>
                            <div class="status-indicator">
                                <div class="status-dot online"></div>
                                <span style="font-size: 12px;">Online</span>
                            </div>
                        </div>
                        <div class="client-stats">
                            <div class="mini-stat">
                                <div class="mini-label">Upload</div>
                                <div class="mini-value upload">${client.upload.toFixed(1)} Mbps</div>
                            </div>
                            <div class="mini-stat">
                                <div class="mini-label">Download</div>
                                <div class="mini-value download">${client.download.toFixed(1)} Mbps</div>
                            </div>
                            <div class="mini-stat">
                                <div class="mini-label">Total</div>
                                <div class="mini-value">${client.totalUsage} GB</div>
                            </div>
                            <div class="mini-stat">
                                <div class="mini-label">Services</div>
                                <div class="mini-value" style="font-size: 12px;">${client.services.slice(0, 2).join(', ')}</div>
                            </div>
                        </div>
                    `;
                    
                    container.appendChild(card);
                }
            });
        }

        // Function to update clients table
        function updateClientsTable() {
            const table = document.getElementById('clients-table');
            table.innerHTML = '';
            
            clients.forEach(client => {
                const row = document.createElement('tr');
                row.className = 'client-row';
                
                row.innerHTML = `
                    <td>
                        <div class="client-info">
                            <div class="client-avatar">${client.name.charAt(0)}</div>
                            <div>
                                <div style="font-weight: 600;">${client.name}</div>
                                <div style="font-size: 12px; color: #94a3b8;">${client.type}</div>
                            </div>
                        </div>
                    </td>
                    <td>${client.ip}</td>
                    <td class="upload">${client.upload.toFixed(1)} Mbps</td>
                    <td class="download">${client.download.toFixed(1)} Mbps</td>
                    <td>${client.totalUsage} GB</td>
                    <td>
                        <div class="status-indicator">
                            <div class="status-dot ${client.status}"></div>
                            <span>${client.status.charAt(0).toUpperCase() + client.status.slice(1)}</span>
                        </div>
                    </td>
                `;
                
                table.appendChild(row);
            });
        }

        // Function to update usage breakdown
        function updateUsageBreakdown() {
            const streaming = 35 + Math.random() * 10;
            const gaming = 25 + Math.random() * 8;
            const downloads = 20 + Math.random() * 12;
            const web = 15 + Math.random() * 5;
            
            document.getElementById('usage-streaming').textContent = streaming.toFixed(1) + ' GB';
            document.getElementById('usage-gaming').textContent = gaming.toFixed(1) + ' GB';
            document.getElementById('usage-downloads').textContent = downloads.toFixed(1) + ' GB';
            document.getElementById('usage-web').textContent = web.toFixed(1) + ' GB';
            
            // Update doughnut chart
            usageChart.data.datasets[0].data = [streaming, gaming, downloads, web, 5];
            usageChart.update();
        }

        // Main update function
        function updateRealTimeData() {
            // Generate main network traffic
            const traffic = generateNetworkTraffic();
            
            // Update peak values
            peakUpload = Math.max(peakUpload, traffic.upload);
            peakDownload = Math.max(peakDownload, traffic.download);
            
            // Update main stats
            document.getElementById('upload-speed').textContent = traffic.upload.toFixed(1) + ' Mbps';
            document.getElementById('download-speed').textContent = traffic.download.toFixed(1) + ' Mbps';
            document.getElementById('upload-current').textContent = traffic.upload.toFixed(1);
            document.getElementById('download-current').textContent = traffic.download.toFixed(1);
            document.getElementById('upload-peak').textContent = peakUpload.toFixed(1);
            document.getElementById('download-peak').textContent = peakDownload.toFixed(1);
            
            // Update progress bars (assuming 100 Mbps max for visualization)
            document.getElementById('upload-progress').style.width = Math.min(100, (traffic.upload / 100) * 100) + '%';
            document.getElementById('download-progress').style.width = Math.min(100, (traffic.download / 100) * 100) + '%';
            
            // Update client data
            clients.forEach(client => {
                if (client.status === 'online') {
                    // Distribute traffic among online clients
                    const clientUpload = Math.random() * traffic.upload / 2;
                    const clientDownload = Math.random() * traffic.download / 2;
                    
                    client.upload = clientUpload;
                    client.download = clientDownload;
                    
                    // Slowly increase total usage
                    client.totalUsage += (clientUpload + clientDownload) * 0.0001;
                }
            });
            
            // Update traffic chart
            trafficChart.data.datasets[0].data.push(traffic.upload);
            trafficChart.data.datasets[1].data.push(traffic.download);
            
            if (trafficChart.data.datasets[0].data.length > 20) {
                trafficChart.data.datasets[0].data.shift();
                trafficChart.data.datasets[1].data.shift();
            }
            
            trafficChart.update();
            
            // Update other components
            updateClientOverview();
            updateClientsTable();
            updateUsageBreakdown();
            
            // Update timestamp
            const now = new Date();
            document.getElementById('last-updated').textContent = now.toLocaleTimeString();
        }

        // Initialize the dashboard
        updateClientOverview();
        updateClientsTable();
        updateUsageBreakdown();
        updateRealTimeData();
        
        // Update data every 2 seconds for real-time feel
        setInterval(updateRealTimeData, 2000);
        
        // Simulate client status changes occasionally
        setInterval(() => {
            clients.forEach(client => {
                if (Math.random() > 0.95) {
                    client.status = client.status === 'online' ? 'offline' : 'online';
                }
            });
        }, 10000);
    </script>
</body>
</html>